<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hack The Tunnels Challenges on Carleton Computer Science Society</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/challenges/</link><description>Recent content in Hack The Tunnels Challenges on Carleton Computer Science Society</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 14 Oct 2024 23:11:13 +0000</lastBuildDate><atom:link href="https://ccss.carleton.ca/hackthetunnels/2024-2025/challenges/index.xml" rel="self" type="application/rss+xml"/><item><title>10. Prevent Overlapping Events</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/overlapping-courses/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/overlapping-courses/</guid><description>&lt;p>Modify the backend to ensure that when a student creates a timetable, no two courses in the timetable overlap. If overlapping courses are detected, the timetable creation should be rejected, and an error message should be returned to the user.&lt;/p>
&lt;p>Timetable creation is handled in the Timetable Service (&lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/service/src/services/Timetable.ts">service/src/services/Timetable.ts&lt;/a>) inside the &lt;code>createTimetable&lt;/code> method.&lt;/p>
&lt;p>This method should return an error that is surfaced to the user if there are courses with conflicting times.&lt;/p></description></item><item><title>11. Add Max Registration Column to Scheduled Events</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-max-registration-column/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-max-registration-column/</guid><description>&lt;p>Add a &lt;strong>&amp;ldquo;max registration&amp;rdquo;&lt;/strong> column to the &lt;code>scheduledEvents&lt;/code> table in the relational database. This column should store the maximum number of students allowed to register for each scheduled event.&lt;/p>
&lt;p>Checkout the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/8f7769a7223bb3e2ac4e95ced1f64373444fd838/service/src/db/schema.prisma">schema.prisma&lt;/a> file to get started.&lt;/p>
&lt;p>Ensure that the migration is created and executed correctly, and update any relevant models or services to reflect this new column.&lt;/p>
&lt;p>For help creating a Prisma migration, see &lt;a href="https://www.prisma.io/docs/orm/prisma-migrate/getting-started">this guide&lt;/a>.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>A migration is created to add the &amp;ldquo;max registration&amp;rdquo; column to the &lt;code>scheduledEvents&lt;/code> table.&lt;/li>
&lt;li>The new column is properly integrated into the existing data models and services.&lt;/li>
&lt;/ol></description></item><item><title>15. Send Discord Webhook</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/webhooks/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/webhooks/</guid><description>&lt;p>Set up a system that triggers a &lt;a href="https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks">Discord webhook&lt;/a> when a specific event happens (e.g., when a new timetable is created or a course is added).&lt;/p>
&lt;p>Your task is to configure the backend so that, upon the occurrence of {x} event, a message is sent to a Discord channel via a webhook.&lt;/p>
&lt;p>You can use any library or method to send the HTTP request to the Discord webhook URL.&lt;/p>
&lt;p>Timetable creation is handled in the Timetable Service (&lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/service/src/services/Timetable.ts">service/src/services/Timetable.ts&lt;/a>) inside the &lt;code>createTimetable&lt;/code> method.&lt;/p></description></item><item><title>17. Create a GraphQL API</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/graphql-api-implementation/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/graphql-api-implementation/</guid><description>&lt;p>Create a &lt;a href="https://graphql.org/">GraphQL&lt;/a> API for the service. This GraphQL API will be exposed on the route &lt;code>POST /api/graphql&lt;/code>.&lt;/p>
&lt;p>To satisfy this challenge, implement at least one GraphQL query and one GraphQL mutation. Be sure to reuse the existing service code within the &lt;code>service/src/services&lt;/code> folder to integrate with your GraphQL implementation.&lt;/p>
&lt;p>If you&amp;rsquo;re not sure where to get started, check out this &lt;a href="https://graphql.org/graphql-js/">guide.&lt;/a>&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>A GraphQL API is set up and accessible at the specified route.&lt;/li>
&lt;li>At least one query and one mutation are implemented successfully.&lt;/li>
&lt;li>The participant reuses existing service code appropriately to handle the GraphQL operations.&lt;/li>
&lt;/ol></description></item><item><title>18. Search By Program</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/search-by-program/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/search-by-program/</guid><description>&lt;p>On the BuildTimetable page, add UI that allows the user to search for courses by program (ex: COMP, MATH, etc)&lt;/p>
&lt;p>To query the backend, you can either add new program &lt;a href="https://www.branch.io/glossary/query-parameters/#:~:text=Query%20parameters%20are%20a%20defined,web%20server%20when%20making%20requests.">query parameter&lt;/a> to the &lt;code>/scheduledEvents&lt;/code> endpoint or create a new endpoint.&lt;/p>
&lt;p>Both of these would involve modifications to the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/8a57926575f6d4c35565d84971337e505cab96a9/service/src/api/routes/scheduledEvents.ts">scheduleEventsRouter&lt;/a>.&lt;/p>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The participant can demostrate the different results are returned for each selected program.&lt;/p></description></item><item><title>20. Search Course by CRN</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-course-crn-scheduled/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-course-crn-scheduled/</guid><description>&lt;p>Implement a feature on the BuildTimetable page that allows users to search for a course using the course&amp;rsquo;s &lt;strong>CRN (Course Reference Number)&lt;/strong>. The user should be able to input a CRN, and upon validation, added to the &amp;ldquo;worksheet&amp;rdquo; section of the BuildTimetable page.&lt;/p>
&lt;p>The feature should include validation to ensure the CRN is valid and exists in the course database.&lt;/p>
&lt;p>To query the backend, you can either add new CRN &lt;a href="https://www.branch.io/glossary/query-parameters/#:~:text=Query%20parameters%20are%20a%20defined,web%20server%20when%20making%20requests.">query parameter&lt;/a> to the &lt;code>/scheduledEvents&lt;/code> endpoint or create a new endpoint.&lt;/p></description></item><item><title>21. Scheduled Event Page With Redis</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/scheduled-event-page-caching/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/scheduled-event-page-caching/</guid><description>&lt;p>Let&amp;rsquo;s recreate &lt;a href="https://central.carleton.ca/prod/bwysched.p_display_course?wsea_code=EXT&amp;amp;term_code=202430&amp;amp;disp=22199269&amp;amp;crn=31211">this page&lt;/a> from the original Carleton Central.&lt;/p>
&lt;p>In the client, create a new page in &lt;code>client/src/pages&lt;/code> that will display detailed information for a scheduled event. The page should allow users to view data about the scheduled event, including information from both the &lt;strong>scheduled events&lt;/strong> and &lt;strong>courses&lt;/strong> tables.&lt;/p>
&lt;p>In the service API, create a new route in &lt;code>service/src/api/routes/scheduledEvents.ts&lt;/code> for retrieving an individual scheduled event via &lt;code>/scheduledEvents/:id&lt;/code>.&lt;/p>
&lt;p>Within the &lt;code>ScheduledEvents&lt;/code> service (&lt;code>service/src/services/ScheduledEvent.ts&lt;/code>), add a new method that retrieves a scheduled event and aggregates the necessary data from both the &lt;code>scheduledEvents&lt;/code> and &lt;code>courses&lt;/code> tables.&lt;/p></description></item><item><title>25. Set Up GitHub Actions for Prettier</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/github-actions-prettier/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/github-actions-prettier/</guid><description>&lt;p>Create a &lt;a href="https://github.com/features/actions">GitHub Actions&lt;/a> configuration that runs Prettier automatically whenever a pull request (PR) is made. The action should format the code in the specified files to maintain code style consistency across the project.&lt;/p>
&lt;p>Ensure that your workflow is triggered on &lt;code>pull_request&lt;/code> events and that it runs Prettier on the designated files or directories.&lt;/p>
&lt;p>See an &lt;a href="https://github.com/CarletonComputerScienceSociety/website/blob/master/.github/workflows/workflow.yml">example of this&lt;/a> on the CCSS Website repo.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>A GitHub Actions workflow is created that runs Prettier on PRs.&lt;/li>
&lt;li>The workflow triggers correctly when a pull request is opened or updated.&lt;/li>
&lt;/ol></description></item><item><title>5. Improve Timetable Styling</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/improve-timetable-styling/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/improve-timetable-styling/</guid><description>&lt;p>Improve the user experience by updating the &lt;strong>styling&lt;/strong> of the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/components/Timetable/Timetable.tsx">&lt;code>&amp;lt;Timetable/&amp;gt;&lt;/code>&lt;/a> component to make it more visually appealing and user-friendly.&lt;/p>
&lt;p>You can enhance the layout, colors, spacing, and overall design to improve clarity and usability for students.&lt;/p>
&lt;p>This component has definitely got some &amp;ldquo;spaghetti code&amp;rdquo;. Have Fun :)&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The styling of the &lt;code>&amp;lt;Timetable/&amp;gt;&lt;/code> component is significantly improved, making it more visually appealing and easier to read.&lt;/p>
&lt;p>(so long as it looks pretty different you can give them the points)&lt;/p></description></item><item><title>6. Improve Search Result Styling</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/improve-result-styling/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/improve-result-styling/</guid><description>&lt;p>Enhance the &lt;strong>styling&lt;/strong> of the &amp;ldquo;course results&amp;rdquo; on the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/8f7769a7223bb3e2ac4e95ced1f64373444fd838/client/src/pages/BuildTimetable/BuildTimetable.tsx">BuildTimetable&lt;/a> page.&lt;/p>
&lt;p>This refers to the ui that displays search results for scheduled events.&lt;/p>
&lt;p>This can involve improving layout, colors, spacing, and overall design to improve clarity and visual appeal for students searching through results.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ul>
&lt;li>The styling of the course search results are significantly different&lt;/li>
&lt;/ul>
&lt;p>(so long as it looks pretty different you can give them the points)&lt;/p></description></item><item><title>9. Create A CSS Animation</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-css-animation/</link><pubDate>Mon, 14 Oct 2024 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/add-css-animation/</guid><description>&lt;p>Utilize &lt;a href="https://www.w3schools.com/css/css3_animations.asp">CSS Animations&lt;/a> to add something fun to your website!&lt;/p>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The participant has utilized CSS animations in some way.&lt;/p></description></item><item><title>12. Send Email On Timetable Create</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/email-timetable/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/email-timetable/</guid><description>&lt;p>When a student creates a timetable, an email should be sent to the student&amp;rsquo;s email address containing details of their newly created timetable.&lt;/p>
&lt;p>You can use any library to achieve this. If you&amp;rsquo;re unsure where to start, this &lt;a href="https://medium.com/@y.mehnati_49486/how-to-send-an-email-from-your-gmail-account-with-nodemailer-837bf09a7628">guide&lt;/a> demonstrates how to send emails using &lt;code>nodemailer&lt;/code> with the Gmail SMTP server.&lt;/p>
&lt;p>Timetable creation is handled in the Timetable Service (&lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/service/src/services/Timetable.ts">service/src/services/Timetable.ts&lt;/a>) inside the &lt;code>createTimetable&lt;/code> method.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ul>
&lt;li>When a student creates a timetable, an email containing the timetable details is sent to the student&amp;rsquo;s email.&lt;/li>
&lt;/ul></description></item><item><title>13. Generate Recurring Report</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/registration-count-report/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/registration-count-report/</guid><description>&lt;p>Create a system that generates a report on a &lt;strong>recurring&lt;/strong> basis that has a list of all students who have created atleast one timetable.&lt;/p>
&lt;p>You are free to implement the solution using any tools or libraries that fit the task.&lt;/p>
&lt;p>If you&amp;rsquo;re not sure where to get started, take a look at &lt;a href="https://medium.com/@developerom/schedule-cron-jobs-in-node-js-12a6a33d6ed3">this guide&lt;/a>.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>The report includes a list of all students who have created atleast one timetable.&lt;/li>
&lt;li>The system generates the report on a recurring basis.&lt;/li>
&lt;li>The report is either saved to a file or logged in a way that can be easily accessed by the administrator.&lt;/li>
&lt;/ol></description></item><item><title>14. Course Data Web Scraper</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/webscraper-course-data/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/webscraper-course-data/</guid><description>&lt;p>Create a web scraper that extracts course data from the &lt;a href="https://central.carleton.ca/prod/bwysched.p_select_term?wsea_code=EXT">Carleton Central schedule page&lt;/a>. The scraper should retrieve details such as course codes, titles, and available sections for a given term.&lt;/p>
&lt;p>If you&amp;rsquo;re not sure where to get started, here is some starter code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#a6e22e">axios&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;axios&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#a6e22e">cheerio&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#e6db74">&amp;#39;cheerio&amp;#39;&lt;/span>; &lt;span style="color:#75715e">// Use this syntax for compatibility
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">scrapeData&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">async&lt;/span> () &lt;span style="color:#f92672">=&amp;gt;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">data&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">axios&lt;/span>.&lt;span style="color:#66d9ef">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;https://central.carleton.ca/prod/bwysched.p_select_term?wsea_code=EXT&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>); &lt;span style="color:#75715e">// Logs raw HTML content
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">$&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">cheerio&lt;/span>.&lt;span style="color:#a6e22e">load&lt;/span>(&lt;span style="color:#a6e22e">data&lt;/span>); &lt;span style="color:#75715e">// Initialize Cheerio with loaded HTML
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;title&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">text&lt;/span>()); &lt;span style="color:#75715e">// Example: Print the &amp;lt;title&amp;gt; content
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>};
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">scrapeData&lt;/span>();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To run this code, you&amp;rsquo;ll have to &lt;code>npm i axios&lt;/code> and &lt;code>npm i cheerio&lt;/code>.&lt;/p></description></item><item><title>16. Send Text When Timetable Is Created</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/sms/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/sms/</guid><description>&lt;p>Utilize &lt;a href="https://www.twilio.com/en-us">Twilio&lt;/a> to send a text (SMS) to students when a timetable is created.&lt;/p>
&lt;p>&lt;em>Note: we don&amp;rsquo;t currently collect phone numbers as part of the account creation process, so feel free to hardcode the desired phone number for this challenge.&lt;/em>&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>When a timetable is created, an SMS message is sent to the desired phone number.&lt;/li>
&lt;li>The participant sets up Twilio properly to handle the SMS sending.&lt;/li>
&lt;li>The message sent contains relevant details about the newly created timetable.&lt;/li>
&lt;/ol></description></item><item><title>19. Course Recommendation</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/course-recommendation-feature/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/course-recommendation-feature/</guid><description>&lt;p>Add a way on the &amp;ldquo;BuildTimetable&amp;rdquo; page for a student to request a course recommedntation based on a time and day specified by the student.&lt;/p>
&lt;p>When a user requests a recommendation, the system should return a list of available courses that fit within that time frame.&lt;/p>
&lt;p>To query the backend, you can either add new &lt;a href="https://www.branch.io/glossary/query-parameters/#:~:text=Query%20parameters%20are%20a%20defined,web%20server%20when%20making%20requests.">query parameters&lt;/a> to the &lt;code>/scheduledEvents&lt;/code> endpoint or create a new endpoint.&lt;/p>
&lt;p>Both of these would involve modifications to the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/8a57926575f6d4c35565d84971337e505cab96a9/service/src/api/routes/scheduledEvents.ts">scheduleEventsRouter&lt;/a>.&lt;/p></description></item><item><title>2. Save Timetable Name</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/name-timetables/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/name-timetables/</guid><description>&lt;p>Add functionality to allow users to &lt;strong>save a custom name&lt;/strong> for their timetables. This will help users identify their timetables more easily when managing multiple schedules.&lt;/p>
&lt;p>In the client, create an input field on the &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/8f7769a7223bb3e2ac4e95ced1f64373444fd838/client/src/pages/BuildTimetable/BuildTimetable.tsx">&lt;strong>BuildTimetable&lt;/strong>&lt;/a> page where users can enter a name for their timetable.&lt;/p>
&lt;p>Update the &lt;code>createTimetable&lt;/code> method to use the input from your newly created &lt;a href="https://www.w3schools.com/tags/tag_input.asp">input element&lt;/a>.&lt;/p>
&lt;p>Utilize React&amp;rsquo;s &lt;a href="https://legacy.reactjs.org/docs/hooks-state.html">useState&lt;/a> hook to store the name.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>A text input field is added on the BuildTimetable page where users can enter a name for their timetable.&lt;/li>
&lt;li>The name is saved in the backend when the timetable is created or updated.&lt;/li>
&lt;li>The saved name is displayed when viewing or managing timetables.&lt;/li>
&lt;/ol></description></item><item><title>22. Course Elastic Search</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/course-text-search/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/course-text-search/</guid><description>&lt;p>On the &lt;strong>BuildTimetable&lt;/strong> page, add a UI feature that allows users to search for &amp;ldquo;scheduled events&amp;rdquo; using a &lt;strong>search bar&lt;/strong>. The search should query ElasticSearch to return relevant scheduled events based on course name, code, description, or any other relevant field.&lt;/p>
&lt;p>In the backend, integrate &lt;a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.17/brew.html">&lt;strong>ElasticSearch&lt;/strong>&lt;/a> to index and search scheduled events from the database.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>A search bar is added to the BuildTimetable page.&lt;/li>
&lt;li>The search bar allows users to query scheduled events by text (e.g., course name, code, description).&lt;/li>
&lt;li>The backend utilizes ElasticSearch to handle these queries and return results efficiently.&lt;/li>
&lt;li>The UI displays the search results dynamically as the user types.&lt;/li>
&lt;/ol></description></item><item><title>23. Move JWT Secret to .env</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/jwt-env-file/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/jwt-env-file/</guid><description>&lt;p>Currently in the codebase, the JWT secret is being hard coded&amp;hellip; this is not good (see: &lt;code>service/src/config/jwt.ts&lt;/code>).&lt;/p>
&lt;p>We should instead use a &lt;a href="https://medium.com/@sujathamudadla1213/what-is-the-use-of-env-8d6b3eb94843">&lt;code>.env&lt;/code>&lt;/a> file to store sensitive information.&lt;/p>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The participant instead reads the JWT secret off of the &lt;code>.env&lt;/code> file.&lt;/p></description></item><item><title>24. Bcrypt Passwords</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/bcrypt-passwords/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/bcrypt-passwords/</guid><description>&lt;p>As a user, my password should not be stored in plain text.&lt;/p>
&lt;p>Storing passwords in plain text is a significant security risk, as it exposes sensitive information in case of a data breach. To enhance security, passwords should be hashed before being stored in the database.&lt;/p>
&lt;p>For this challenge use the &lt;a href="https://www.npmjs.com/package/bcrypt">bcrypt npm package&lt;/a> to hash passwords before they are stored.&lt;/p>
&lt;p>Additionally, update the login workflow to work with the now hashed passwords.&lt;/p></description></item><item><title>26. Dockerize Client and Service</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/docker/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/docker/</guid><description>&lt;p>Create Dockerfiles for both the &lt;code>client&lt;/code> and &lt;code>service&lt;/code> folders, then use Docker Compose to make them work together in a single development environment. The &lt;code>client&lt;/code> should be able to communicate with the &lt;code>service&lt;/code>, and both should run seamlessly within their respective containers.&lt;/p>
&lt;p>Ensure that all necessary dependencies are installed and that the services can interact as they would in a normal, non-Dockerized environment.&lt;/p>
&lt;p>To complete this challenge, you&amp;rsquo;ll need to have &lt;a href="https://formulae.brew.sh/formula/docker">docker installed&lt;/a>.&lt;/p></description></item><item><title>28. Entity Relationship Diagram</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/schema-diagram/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/schema-diagram/</guid><description>&lt;p>Using the provided &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/service/src/db/schema.prisma">Prisma schema file&lt;/a>, create a &lt;a href="https://mermaid.js.org/syntax/entityRelationshipDiagram.html">Entity Relationship diagram&lt;/a> using &lt;a href="https://mermaid.js.org/syntax/entityRelationshipDiagram.html">&lt;code>mermaid.js&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Your diagram should model the relationships between the different entities, including their attributes and how they connect (e.g., one-to-many, many-to-many).&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;ol>
&lt;li>The schema diagram should represent each entity from the provided schema file and at least one relationship between entities.&lt;/li>
&lt;li>Use Mermaid.js to clearly depict the relationships between tables (one-to-many, many-to-many, etc.).&lt;/li>
&lt;li>The diagram does not need to match every attribute, but core relationships and entities should be represented.&lt;/li>
&lt;/ol></description></item><item><title>7. Dark Mode</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/dark-mode/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/dark-mode/</guid><description>&lt;p>Utilize the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme">&lt;code>prefers-color-scheme&lt;/code>&lt;/a> CSS media feature to conditionally adjust part of the website&amp;rsquo;s design to be darker or lighter based on the user&amp;rsquo;s system preference.&lt;/p>
&lt;p>Choose any page in the app and make it so that page &lt;strong>has a fully working dark mode&lt;/strong>.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The participant has successfully used the &lt;code>prefers-color-scheme&lt;/code> media feature in CSS to implement conditional styling for dark mode on one full page.&lt;/p></description></item><item><title>8. Responsive Menu Page</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/carleton-central-responsive-menu/</link><pubDate>Sat, 14 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/carleton-central-responsive-menu/</guid><description>&lt;p>Redesign the Carleton Central &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/pages/Menu/Menu.tsx">&amp;ldquo;menu&amp;rdquo;&lt;/a> page to be responsive and mobile-friendly. The current menu is built for desktop screens, and your task is to make it adjust and display properly on mobile devices with various screen sizes.&lt;/p>
&lt;p>Use techniques such as CSS &lt;a href="https://www.w3schools.com/css/css3_flexbox.asp">Flexbox&lt;/a>, &lt;a href="https://www.w3schools.com/css/css_grid.asp">Grid&lt;/a>, and &lt;a href="https://www.w3schools.com/css/css_rwd_mediaqueries.asp">media queries&lt;/a> to ensure the layout adapts smoothly to smaller screens.&lt;/p>
&lt;p>&lt;strong>Note:&lt;/strong> Only worry about preserving links to the &amp;ldquo;BuildTimetable&amp;rdquo; and &amp;ldquo;Timetables&amp;rdquo; pages. You can remove the rest of the links on this screen (if you want).&lt;/p></description></item><item><title>0. Hello World: Update Page Title</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/hello-world/</link><pubDate>Sun, 01 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/hello-world/</guid><description>&lt;p>To complete this challenge, please update the websites page title.&lt;/p>
&lt;p>Checkout: &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/index.html">&lt;code>client/index.html&lt;/code>&lt;/a>&lt;/p>
&lt;p>And update the page title to be any name that you feel will better represent your project.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>&amp;lt;!doctype html&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;link rel=&amp;#34;icon&amp;#34; type=&amp;#34;image/svg+xml&amp;#34; href=&amp;#34;/vite.svg&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34; /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">- &amp;lt;title&amp;gt;Hack The Tunnels Project&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&lt;/span>&lt;span style="color:#a6e22e">+ &amp;lt;title&amp;gt;Your New Project Title&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">&lt;/span> &amp;lt;/head&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;body&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;div id=&amp;#34;root&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;script type=&amp;#34;module&amp;#34; src=&amp;#34;/src/main.tsx&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/body&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/html&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>This challenge will be considered complete if the title of the webpage / the name of their &amp;ldquo;tab&amp;rdquo; is anything but &amp;ldquo;Hack The Tunnels Project&amp;rdquo;.&lt;/p></description></item><item><title>1. Create Your Own Login Page</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/redesign-login-page/</link><pubDate>Sun, 01 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/redesign-login-page/</guid><description>&lt;p>For this challenge, your team needs redesign the Carleton Central login page.&lt;/p>
&lt;p>Checkout: &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/pages/Login/Login.tsx">&lt;code>client/src/pages/Login/Login.tsx&lt;/code>&lt;/a> to get started.&lt;/p>
&lt;p>Additionally, today the email and password values used when clicking &amp;ldquo;sign in&amp;rdquo; are hard coded to be &lt;code>admin@email.com&lt;/code> and &lt;code>password&lt;/code>.&lt;/p>
&lt;p>Utilize React&amp;rsquo;s &lt;a href="https://legacy.reactjs.org/docs/hooks-state.html">useState&lt;/a> hook to store custom values for email and password and update the &lt;code>attemptLogin&lt;/code> login function to use the newly stored values.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The new login page must satisfy atleast (2) of these (4) possible criteria:&lt;/p></description></item><item><title>27. Sequence Diagram</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/e2e-sequence-diagram/</link><pubDate>Sun, 01 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/e2e-sequence-diagram/</guid><description>&lt;p>Pick one of the one of either &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/pages/Login/Login.tsx">&lt;code>Login&lt;/code>&lt;/a> or &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/pages/BuildTimetable/BuildTimetable.tsx">&lt;code>BuildTimetable&lt;/code>&lt;/a> pages and create a &lt;a href="https://agilemodeling.com/artifacts/sequencediagram.htm">sequence diagram&lt;/a> using &lt;a href="https://mermaid.js.org/syntax/sequenceDiagram.html">&lt;code>mermaid.js&lt;/code>&lt;/a>&lt;/p>
&lt;p>Your diagram should show messagings passing between the &lt;code>client&lt;/code>, &lt;code>server&lt;/code>, and &lt;code>database&lt;/code>.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The sequence diagrams do not need to strictly follow any standard. This challenge is meant to make the participant look through the codebase to see how messages are being passed.&lt;/p></description></item><item><title>3. Update Central Layout</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/update-central-layout/</link><pubDate>Sun, 01 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/update-central-layout/</guid><description>&lt;p>For this challenge, your team needs to improve the &amp;ldquo;Central Layout&amp;rdquo;.&lt;/p>
&lt;p>Checkout: &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/layouts/Central/Central.tsx">&lt;code>client/src/layouts/Central/Central.tsx&lt;/code>&lt;/a> to get started.&lt;/p>
&lt;p>The &amp;ldquo;Central Layout&amp;rdquo; is used by all of the pages themed to look like Carleton Central.&lt;/p>
&lt;p>This means that any change may to this file will modify the look of all over pages using this layout.&lt;/p>
&lt;p>In the example below, &lt;a href="https://react.dev/reference/react/Children">&lt;code>children&lt;/code>&lt;/a> is the contents of other pages being passed into this layout to be rendered.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">Central&lt;/span>({ &lt;span style="color:#a6e22e">title&lt;/span>, &lt;span style="color:#a6e22e">children&lt;/span> }&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">Props&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Base&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Banner&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">HeaderLinks&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Navigation&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page__title&amp;#34;&lt;/span>&amp;gt;{&lt;span style="color:#a6e22e">title&lt;/span>}&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Divider&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page__content&amp;#34;&lt;/span>&amp;gt;{&lt;span style="color:#a6e22e">children&lt;/span>}&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">Divider&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page__footer&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page__footer__release&amp;#34;&lt;/span>&amp;gt;&lt;span style="color:#a6e22e">Release&lt;/span>: &lt;span style="color:#66d9ef">8.10.1&lt;/span>&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Central__page__footer__copyright&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">©&lt;/span> &lt;span style="color:#ae81ff">2024&lt;/span> &lt;span style="color:#a6e22e">Ellucian&lt;/span> &lt;span style="color:#a6e22e">Company&lt;/span> &lt;span style="color:#a6e22e">L&lt;/span>.&lt;span style="color:#a6e22e">P&lt;/span>. &lt;span style="color:#a6e22e">and&lt;/span> &lt;span style="color:#a6e22e">its&lt;/span> &lt;span style="color:#a6e22e">affiliates&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">Base&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The new layout must satisfy (3) of the (5) following criteria&lt;/p></description></item><item><title>4. Redesign 404 Page</title><link>https://ccss.carleton.ca/hackthetunnels/2024-2025/redesign-404-page/</link><pubDate>Sun, 01 Oct 2023 23:11:13 +0000</pubDate><guid>https://ccss.carleton.ca/hackthetunnels/2024-2025/redesign-404-page/</guid><description>&lt;p>For this challenge, your team needs to improve the &amp;ldquo;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404">404&lt;/a> Page&amp;rdquo;.&lt;/p>
&lt;p>This is the page that renders whenever you try to go to a route that does not exist in your app, ex: &lt;code>&amp;quot;http://localhost:5173/idontexist&amp;quot;&lt;/code>.&lt;/p>
&lt;p>Checkout: &lt;a href="https://github.com/CarletonComputerScienceSociety/hack-the-tunnels-starter-2024/blob/main/client/src/pages/NotFound/NotFound.tsx">&lt;code>client/src/pages/NotFound/NotFound.tsx&lt;/code>&lt;/a> to get started.&lt;/p>
&lt;br/>
&lt;h2 id="acceptance-criteria">Acceptance Criteria:&lt;/h2>
&lt;p>The new page must have more than just the text &amp;ldquo;404&amp;rdquo;.&lt;/p>
&lt;p>If you can&amp;rsquo;t think of any better improvements, just put a funny gif or something you feel represents the goal of this page.&lt;/p></description></item></channel></rss>